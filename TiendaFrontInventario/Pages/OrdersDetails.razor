@page "/OrdersDetails"
@inject IServiciosDetalleOrden ServiciosDetalleOrden
<!DOCTYPE html>
    <html>
    <head>
        <title>OrderDetails</title>
        <link rel="stylesheet" href="~/css/app.css" />
    </head>
    <body>
        <h1 class="H1">Orders Details</h1>
        <div class="Container2">
            <h1>Search all the register of the Orders Details</h1>
            <button @onclick="GetAllOrdersDetails">Search all</button>
            @if(listad!=null)
            {
                <table>
                    <thead>
                        <tr>
                            <th>OrderDetailID</th>
                            <th>OrderID</th>
                            <th>ProductID</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DetalleOrden item in listad)
                        {
                            <tr>
                                <td>@item.DetalleOrderID</td>
                                <td>@item.IdOrden</td>
                                <td>@item.ProductoID</td>
                                <td>@item.Cantidad</td>
                                <td>@item.PrecioUnitario</td>
                            </tr>
                        
                        }
                </tbody>
            </table>

        }
        else
        {
            <p>Error:@MessageGet</p>
        }
        </div>
        <hr />
        <div class="Container2">
            <h1>Search one register of orders details</h1>
            <p>
                Write the Orders Detail´s code:a
                <input type="text" @bind="CodOrderDetail" required />
            </p>
            <button @onclick="GetOrderDetails">Find me</button>
            @if(OrderDetail!=null)
            {
               <table>
                   <thead>
                       <tr>
                           <th>OrderDetailID</th>
                           <th>OrderID</th>
                           <th>ProductID</th>
                           <th>Quantity</th>
                           <th>UnitPrice</th>
                       </tr>
                   </thead>
                   <tbody>
                       <tr>
                           <td>@OrderDetail.DetalleOrderID</td>
                           <td>@OrderDetail.IdOrden</td>
                           <td>@OrderDetail.ProductoID</td>
                           <td>@OrderDetail.Cantidad</td>
                           <td>@OrderDetail.PrecioUnitario</td>
                       </tr>
                   </tbody>
            </table>

        }
        else
        {
            <p>Error:@MessageGetOrderDetail</p>
        }
        </div>
        <hr />
        <div class="Container2">
            <h1>Delete of register from Orders Detail</h1>
            <p>
                Write de Orders detail´s code:a
                <input type="text" @bind="CodDelete" required />
            </p>
            <button @onclick="DeleteOrderDetail">Delete me</button>
            @if(SuccessDelete!=false)
            {
                <p>Success Delete</p>
            
            }
            else
            {
                <p>Error:@MessageDelete</p>
            }
        </div>
        <hr />
        <div class="Container2">
            <h1>Found the Order Detail to modify</h1>
            <p>
                Write the Order Detail´s code:
                <input type="text" @bind="CodPutOrderDetail" required />
            </p>
            <button @onclick="GetPutOrderDetail">Find me</button>
            @if(OrderDetailGet!=null)
            {
                <p>Order detail found</p>
                <table>
                    <thead>
                        <tr>
                            <th>OrderDetailID</th>
                            <th>OrderID</th>
                            <th>ProductID</th>
                            <th>Quantity</th>
                            <th>UnitPrice</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@OrderDetailGet.DetalleOrderID</td>
                            <td>@OrderDetailGet.IdOrden</td>
                            <td>@OrderDetailGet.ProductoID</td>
                            <td>@OrderDetailGet.Cantidad</td>
                            <td>@OrderDetailGet.PrecioUnitario</td>
                        </tr>
                    </tbody>
            </table>
            <hr />
            <div class="container3">
                <h2>Modify the Quantity´s Product:
                    <input type="text" @bind="OrderDetailGet.Cantidad" />
                </h2>
                <button @onclick="PutOrderDetail">Modify me</button>
                @if(SuccessPut!=false)
                {
                    <h2>Success Edit of Quantity</h2>
                }
                else
                {
                    <h2>Error:@MessagePut</h2>
                }
                </div>
        }
        else
        {
            <p>Error:@MessageGetPutOrderDetail</p>
        }
        </div>

    </body>
    </html>
@code {

    public List<DetalleOrden>? listad { get; set; }
    public string? MessageGet { get; set; }
    protected async Task GetAllOrdersDetails()
    {
        try
        {
            string url = "https://localhost:7263/api/DetalleOrdens";
            var response = await ServiciosDetalleOrden.GetDetalleOrden<List<DetalleOrden>>(url);
            if(!response.Error)
            {
                listad = response.Response;
                MessageGet = String.Empty;
            }
            else
            {
                listad = null;
                MessageGet = await response.GetErrorMessageAsync();
            }

        }catch (Exception e)
        {
            listad = null;
            MessageGet = "Error:" + e.Message;

        }


    }


    public DetalleOrden? OrderDetail { get; set; }
    public int CodOrderDetail { get; set; }
    public string? MessageGetOrderDetail { get; set; }
    protected async Task GetOrderDetails()
    {
        try
        {
            string url = "https://localhost:7263/api/DetalleOrdens/"+CodOrderDetail;
            var response = await ServiciosDetalleOrden.GetDetalleOrden<DetalleOrden>(url);
            if(!response.Error)
            {
                OrderDetail = response.Response;
                MessageGetOrderDetail = String.Empty;
            }
            else
            {
                OrderDetail = null;
                MessageGetOrderDetail = await response.GetErrorMessageAsync();
            }

        }catch (Exception e)
        {
            OrderDetail = null;
            MessageGetOrderDetail = "Error:" + e.Message;

        }

    }

    public int CodDelete { get; set; }
    public bool SuccessDelete = false;
    public string? MessageDelete { get; set; }
    protected async Task DeleteOrderDetail()
    {
        try
        {
            string url = "https://localhost:7263/api/DetalleOrdens/" + CodDelete;
            var response = await ServiciosDetalleOrden.DeleteDetalleOrden(url);
            if(!response.Error)
            {
                SuccessDelete = true;
                MessageDelete = String.Empty;
            }
            else
            {
                SuccessDelete = false;
                MessageDelete = await response.GetErrorMessageAsync();
            }

        }catch (Exception e)
        {
            SuccessDelete = false;
            MessageDelete = "Error:" + e.Message;

        }

    }

    //Metodo put para modifcar la Cantidad de una orden
    public DetalleOrden? OrderDetailGet { get; set; }
    public int CodPutOrderDetail { get; set; }
    public string? MessageGetPutOrderDetail { get; set; }
    protected async Task GetPutOrderDetail()
    {
        try
        {
            string url = "https://localhost:7263/api/DetalleOrdens/" + CodPutOrderDetail;
            var response = await ServiciosDetalleOrden.GetDetalleOrden<DetalleOrden>(url);
            if(!response.Error)
            {
                OrderDetailGet = response.Response;
                MessageGetPutOrderDetail = String.Empty;
            }
            else
            {
                OrderDetailGet = null;
                MessageGetPutOrderDetail = await response.GetErrorMessageAsync();
            }

        }catch(Exception e)
        {
            OrderDetailGet = null;
            MessageGetPutOrderDetail = "Error:" + e.Message;

        }

    }

    public bool SuccessPut = false;
    public string? MessagePut { get; set; }
    protected async Task PutOrderDetail()
    {
        try
        {
            string url = "https://localhost:7263/api/DetalleOrdens/" + CodPutOrderDetail;
            var response = await ServiciosDetalleOrden.PutDetalleOrden<DetalleOrden>(url, OrderDetailGet);
            if(!response.Error)
            {
                SuccessPut = true;
                MessagePut = String.Empty;
            }
            else
            {
                SuccessPut = false;
                MessagePut = await response.GetErrorMessageAsync();
            }

        }catch (Exception e)
        {
            SuccessPut = false;
            MessagePut = "Error:" + e.Message;

        }

    }



}
